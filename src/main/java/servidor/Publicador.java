package servidor;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 4.0.5
 * 2024-10-31T18:28:55.725-03:00
 * Generated source version: 4.0.5
 *
 */
@WebService(targetNamespace = "http://servidor/", name = "Publicador")
@XmlSeeAlso({ObjectFactory.class, net.java.dev.jaxb.array.ObjectFactory.class})
public interface Publicador {

    @WebMethod
    @Action(input = "http://servidor/Publicador/obtenerInscrpcionesDeportistaRequest", output = "http://servidor/Publicador/obtenerInscrpcionesDeportistaResponse")
    @RequestWrapper(localName = "obtenerInscrpcionesDeportista", targetNamespace = "http://servidor/", className = "servidor.ObtenerInscrpcionesDeportista")
    @ResponseWrapper(localName = "obtenerInscrpcionesDeportistaResponse", targetNamespace = "http://servidor/", className = "servidor.ObtenerInscrpcionesDeportistaResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<net.java.dev.jaxb.array.StringArray> obtenerInscrpcionesDeportista(

        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebMethod
    @Action(input = "http://servidor/Publicador/obtenerNicknameRequest", output = "http://servidor/Publicador/obtenerNicknameResponse", fault = {@FaultAction(className = PersistenciaException_Exception.class, value = "http://servidor/Publicador/obtenerNickname/Fault/PersistenciaException")})
    @RequestWrapper(localName = "obtenerNickname", targetNamespace = "http://servidor/", className = "servidor.ObtenerNickname")
    @ResponseWrapper(localName = "obtenerNicknameResponse", targetNamespace = "http://servidor/", className = "servidor.ObtenerNicknameResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String obtenerNickname(

        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    ) throws PersistenciaException_Exception;

    @WebMethod
    @Action(input = "http://servidor/Publicador/esEntrenadorRequest", output = "http://servidor/Publicador/esEntrenadorResponse", fault = {@FaultAction(className = PersistenciaException_Exception.class, value = "http://servidor/Publicador/esEntrenador/Fault/PersistenciaException")})
    @RequestWrapper(localName = "esEntrenador", targetNamespace = "http://servidor/", className = "servidor.EsEntrenador")
    @ResponseWrapper(localName = "esEntrenadorResponse", targetNamespace = "http://servidor/", className = "servidor.EsEntrenadorResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean esEntrenador(

        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    ) throws PersistenciaException_Exception;

    @WebMethod
    @Action(input = "http://servidor/Publicador/obtenerArrayActividadesEntrenadorRequest", output = "http://servidor/Publicador/obtenerArrayActividadesEntrenadorResponse")
    @RequestWrapper(localName = "obtenerArrayActividadesEntrenador", targetNamespace = "http://servidor/", className = "servidor.ObtenerArrayActividadesEntrenador")
    @ResponseWrapper(localName = "obtenerArrayActividadesEntrenadorResponse", targetNamespace = "http://servidor/", className = "servidor.ObtenerArrayActividadesEntrenadorResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<java.lang.String> obtenerArrayActividadesEntrenador(

        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebMethod
    @Action(input = "http://servidor/Publicador/traerPassRequest", output = "http://servidor/Publicador/traerPassResponse", fault = {@FaultAction(className = PersistenciaException_Exception.class, value = "http://servidor/Publicador/traerPass/Fault/PersistenciaException")})
    @RequestWrapper(localName = "traerPass", targetNamespace = "http://servidor/", className = "servidor.TraerPass")
    @ResponseWrapper(localName = "traerPassResponse", targetNamespace = "http://servidor/", className = "servidor.TraerPassResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean traerPass(

        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1
    ) throws PersistenciaException_Exception;

    @WebMethod
    @Action(input = "http://servidor/Publicador/obtenerDeportistaRequest", output = "http://servidor/Publicador/obtenerDeportistaResponse", fault = {@FaultAction(className = PersistenciaException_Exception.class, value = "http://servidor/Publicador/obtenerDeportista/Fault/PersistenciaException")})
    @RequestWrapper(localName = "obtenerDeportista", targetNamespace = "http://servidor/", className = "servidor.ObtenerDeportista")
    @ResponseWrapper(localName = "obtenerDeportistaResponse", targetNamespace = "http://servidor/", className = "servidor.ObtenerDeportistaResponse")
    @WebResult(name = "return", targetNamespace = "")
    public servidor.DtDeportista obtenerDeportista(

        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    ) throws PersistenciaException_Exception;

    @WebMethod
    @Action(input = "http://servidor/Publicador/obtenerClasesDeportistaRequest", output = "http://servidor/Publicador/obtenerClasesDeportistaResponse")
    @RequestWrapper(localName = "obtenerClasesDeportista", targetNamespace = "http://servidor/", className = "servidor.ObtenerClasesDeportista")
    @ResponseWrapper(localName = "obtenerClasesDeportistaResponse", targetNamespace = "http://servidor/", className = "servidor.ObtenerClasesDeportistaResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<java.lang.String> obtenerClasesDeportista(

        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebMethod
    @Action(input = "http://servidor/Publicador/usuarioExisteRequest", output = "http://servidor/Publicador/usuarioExisteResponse", fault = {@FaultAction(className = PersistenciaException_Exception.class, value = "http://servidor/Publicador/usuarioExiste/Fault/PersistenciaException")})
    @RequestWrapper(localName = "usuarioExiste", targetNamespace = "http://servidor/", className = "servidor.UsuarioExiste")
    @ResponseWrapper(localName = "usuarioExisteResponse", targetNamespace = "http://servidor/", className = "servidor.UsuarioExisteResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean usuarioExiste(

        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    ) throws PersistenciaException_Exception;

    @WebMethod
    @Action(input = "http://servidor/Publicador/obtenerVectorUsuariosRequest", output = "http://servidor/Publicador/obtenerVectorUsuariosResponse", fault = {@FaultAction(className = PersistenciaException_Exception.class, value = "http://servidor/Publicador/obtenerVectorUsuarios/Fault/PersistenciaException")})
    @RequestWrapper(localName = "obtenerVectorUsuarios", targetNamespace = "http://servidor/", className = "servidor.ObtenerVectorUsuarios")
    @ResponseWrapper(localName = "obtenerVectorUsuariosResponse", targetNamespace = "http://servidor/", className = "servidor.ObtenerVectorUsuariosResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<java.lang.String> obtenerVectorUsuarios()
 throws PersistenciaException_Exception;

    @WebMethod(operationName = "AltaUsuario")
    @Action(input = "http://servidor/Publicador/AltaUsuarioRequest", output = "http://servidor/Publicador/AltaUsuarioResponse", fault = {@FaultAction(className = PersistenciaException_Exception.class, value = "http://servidor/Publicador/AltaUsuario/Fault/PersistenciaException")})
    @RequestWrapper(localName = "AltaUsuario", targetNamespace = "http://servidor/", className = "servidor.AltaUsuario")
    @ResponseWrapper(localName = "AltaUsuarioResponse", targetNamespace = "http://servidor/", className = "servidor.AltaUsuarioResponse")
    public void altaUsuario(

        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        java.lang.String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        java.lang.String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        java.lang.String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        java.lang.String arg5,
        @WebParam(name = "arg6", targetNamespace = "")
        java.lang.String arg6,
        @WebParam(name = "arg7", targetNamespace = "")
        boolean arg7,
        @WebParam(name = "arg8", targetNamespace = "")
        java.lang.String arg8,
        @WebParam(name = "arg9", targetNamespace = "")
        java.lang.String arg9,
        @WebParam(name = "arg10", targetNamespace = "")
        java.lang.String arg10
    ) throws PersistenciaException_Exception;

    @WebMethod
    @Action(input = "http://servidor/Publicador/obtenerArrayActividadesAceptadasEntrenadorRequest", output = "http://servidor/Publicador/obtenerArrayActividadesAceptadasEntrenadorResponse")
    @RequestWrapper(localName = "obtenerArrayActividadesAceptadasEntrenador", targetNamespace = "http://servidor/", className = "servidor.ObtenerArrayActividadesAceptadasEntrenador")
    @ResponseWrapper(localName = "obtenerArrayActividadesAceptadasEntrenadorResponse", targetNamespace = "http://servidor/", className = "servidor.ObtenerArrayActividadesAceptadasEntrenadorResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<java.lang.String> obtenerArrayActividadesAceptadasEntrenador(

        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebMethod
    @Action(input = "http://servidor/Publicador/modifiarUsuarioRequest", output = "http://servidor/Publicador/modifiarUsuarioResponse", fault = {@FaultAction(className = PersistenciaException_Exception.class, value = "http://servidor/Publicador/modifiarUsuario/Fault/PersistenciaException")})
    @RequestWrapper(localName = "modifiarUsuario", targetNamespace = "http://servidor/", className = "servidor.ModifiarUsuario")
    @ResponseWrapper(localName = "modifiarUsuarioResponse", targetNamespace = "http://servidor/", className = "servidor.ModifiarUsuarioResponse")
    public void modifiarUsuario(

        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        java.lang.String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        java.lang.String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        java.lang.String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        servidor.LocalDate arg5,
        @WebParam(name = "arg6", targetNamespace = "")
        java.lang.String arg6,
        @WebParam(name = "arg7", targetNamespace = "")
        boolean arg7,
        @WebParam(name = "arg8", targetNamespace = "")
        java.lang.String arg8,
        @WebParam(name = "arg9", targetNamespace = "")
        java.lang.String arg9
    ) throws PersistenciaException_Exception;

    @WebMethod
    @Action(input = "http://servidor/Publicador/obtenerEntrenadorRequest", output = "http://servidor/Publicador/obtenerEntrenadorResponse", fault = {@FaultAction(className = PersistenciaException_Exception.class, value = "http://servidor/Publicador/obtenerEntrenador/Fault/PersistenciaException")})
    @RequestWrapper(localName = "obtenerEntrenador", targetNamespace = "http://servidor/", className = "servidor.ObtenerEntrenador")
    @ResponseWrapper(localName = "obtenerEntrenadorResponse", targetNamespace = "http://servidor/", className = "servidor.ObtenerEntrenadorResponse")
    @WebResult(name = "return", targetNamespace = "")
    public servidor.DtEntrenador obtenerEntrenador(

        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    ) throws PersistenciaException_Exception;
}
